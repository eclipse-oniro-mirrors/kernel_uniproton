# Copyright (c) 2022-2022 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/component/lite_component.gni")

MENUCONFIG_H = rebase_path("$root_out_dir/config.h")

os_config_file = "${ohos_build_type}.config"

os_config_file =
    rebase_path(os_config_file, "", "$product_path/kernel_configs")
print("os_config_file:", os_config_file)

exec_script("//build/lite/run_shell_cmd.py",
            [ "env" + " CONFIG_=" + " KCONFIG_CONFIG_HEADER='y=true'" +
                  " KCONFIG_CONFIG=$os_config_file" +
                  " BOARD_COMPANY=$device_company" +
                  " DEVICE_PATH=$device_path" + " srctree=" + rebase_path(".") +
                  " genconfig" + " --header-path $MENUCONFIG_H" +
                  " --file-list kconfig_files.txt" +
                  " --env-list kconfig_env.txt" + " --config-out config.gni" ],
            "",
            [ os_config_file ])

import("$root_out_dir/config.gni")

OSTOPDIR = "//kernel/uniproton/UniProton/src"
OSTHIRDPARTY = "//third_party"

kernel_base_sources = [
  "$OSTOPDIR/config/prt_config.c",
  "$OSTOPDIR/core/kernel/irq/prt_irq.c",
  "$OSTOPDIR/core/kernel/kexc/prt_kexc.c",
  "$OSTOPDIR/core/kernel/sys/prt_sys.c",
  "$OSTOPDIR/core/kernel/sys/prt_sys_init.c",
  "$OSTOPDIR/core/kernel/sys/prt_sys_time.c",
  "$OSTOPDIR/core/kernel/task/prt_amp_task.c",
  "$OSTOPDIR/core/kernel/task/prt_amp_task_del.c",
  "$OSTOPDIR/core/kernel/task/prt_amp_task_init.c",
  "$OSTOPDIR/core/kernel/task/prt_amp_task_minor.c",
  "$OSTOPDIR/core/kernel/task/prt_task.c",
  "$OSTOPDIR/core/kernel/task/prt_task_attrib.c",
  "$OSTOPDIR/core/kernel/task/prt_task_del.c",
  "$OSTOPDIR/core/kernel/task/prt_task_global.c",
  "$OSTOPDIR/core/kernel/task/prt_task_info.c",
  "$OSTOPDIR/core/kernel/task/prt_task_init.c",
  "$OSTOPDIR/core/kernel/task/prt_task_minor.c",
  "$OSTOPDIR/core/kernel/task/prt_task_priority.c",
  "$OSTOPDIR/core/kernel/task/prt_task_sem.c",
  "$OSTOPDIR/core/kernel/task/prt_taskself_id.c",
  "$OSTOPDIR/core/kernel/tick/prt_tick.c",
  "$OSTOPDIR/core/kernel/tick/prt_tick_init.c",
  "$OSTOPDIR/core/kernel/timer/prt_timer.c",
  "$OSTOPDIR/core/kernel/timer/prt_timer_minor.c",
]

kernel_swtmr_sources = [
  "$OSTOPDIR/core/kernel/timer/swtmr/prt_swtmr.c",
  "$OSTOPDIR/core/kernel/timer/swtmr/prt_swtmr_init.c",
  "$OSTOPDIR/core/kernel/timer/swtmr/prt_swtmr_minor.c",
]

kernel_ipc_event_sources = [
  "$OSTOPDIR/core/ipc/event/prt_event.c",
]

kernel_ipc_queue_sources = [
  "$OSTOPDIR/core/ipc/queue/prt_queue.c",
  "$OSTOPDIR/core/ipc/queue/prt_queue_del.c",
  "$OSTOPDIR/core/ipc/queue/prt_queue_init.c",
  "$OSTOPDIR/core/ipc/queue/prt_queue_minor.c",
]

kernel_ipc_sem_sources = [
  "$OSTOPDIR/core/ipc/sem/prt_sem.c",
  "$OSTOPDIR/core/ipc/sem/prt_sem_init.c",
  "$OSTOPDIR/core/ipc/sem/prt_sem_minor.c",
]

kernel_mem_sources = [
  "$OSTOPDIR/mem/prt_mem.c",
  "$OSTOPDIR/mem/fsc/prt_fscmem.c"
]

kernel_om_sources = [
  "$OSTOPDIR/om/err/prt_err.c",
  "$OSTOPDIR/om/err/prt_err_init.c",
  "$OSTOPDIR/om/hook/prt_hook_init.c",
]

kernel_om_cpup_sources = [
  "$OSTOPDIR/om/cpup/prt_cpup.c",
  "$OSTOPDIR/om/cpup/prt_cpup_minor.c",
  "$OSTOPDIR/om/cpup/prt_cpup_thread.c",
  "$OSTOPDIR/om/cpup/prt_cpup_thread_64.c",
  "$OSTOPDIR/om/cpup/prt_cpup_thread_init.c",
  "$OSTOPDIR/om/cpup/prt_cpup_warn.c",
]

kernel_security_sources = [
  "$OSTOPDIR/security/rnd/prt_rnd_set.c"
]

kernel_utility_sources = [
  "$OSTOPDIR/utility/lib/prt_lib_math64.c",
  "$OSTOPDIR/utility/lib/prt_lib_version.c"
]

arch_cortex_m4_sources = [
  "$OSTOPDIR/arch/cpu/armv7-m/common/boot/prt_hw_boot.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/exc/prt_exc.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/hwi/prt_hwi.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/hwi/prt_vi_dispatch.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/tick/prt_hw_tick.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/tick/prt_hw_tick_minor.c",
  "$OSTOPDIR/arch/cpu/armv7-m/common/prt_port.c",
  "$OSTOPDIR/arch/cpu/armv7-m/cortex-m4/prt_dispatch.S",
  "$OSTOPDIR/arch/cpu/armv7-m/cortex-m4/prt_div64.c",
  "$OSTOPDIR/arch/cpu/armv7-m/cortex-m4/prt_hw.S",
  "$OSTOPDIR/arch/cpu/armv7-m/cortex-m4/prt_hw_exc.S",
  "$OSTOPDIR/arch/cpu/armv7-m/cortex-m4/prt_vector.S",
]
